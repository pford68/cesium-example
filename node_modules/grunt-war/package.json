{
  "name": "grunt-war",
  "description": "Pure JS implementation for generating a WAR file.",
  "version": "0.2.7",
  "homepage": "https://github.com/MorrisLLC/grunt-war",
  "author": {
    "name": "Robert Morris",
    "email": "wibobm@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/MorrisLLC/grunt-war"
  },
  "bugs": {
    "url": "https://github.com/MorrisLLC/grunt-war/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/MorrisLLC/grunt-war/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": ">= 0.4.2",
    "node-zip": ">= 1.0.1 < 2"
  },
  "dependencies": {
    "node-zip": ">= 1.0.1"
  },
  "peerDependencies": {
    "grunt": ">= 0.4.2",
    "node-zip": ">= 1.0.1"
  },
  "keywords": [
    "gruntplugin",
    "maven",
    "war",
    "maven-war-plugin",
    "zip",
    "node-zip"
  ],
  "readme": "# grunt-war\n\n> Pure JavaScript implementation for creating a WAR of your project for deployment on a JVM servlet container.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.2`\n\n```shell\nnpm install grunt-war --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-war');\n```\n\n## The \"war\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `war` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n\n      /*\n       * Build a WAR (web archive) without Maven or the JVM installed.\n       */\n      war: {\n        target: {\n          options: {\n            war_dist_folder: '<%= build_dir %>',\n            war_verbose: true,\n            war_name: 'webmagic',\n            war_extras: [{filename: 'grunt-war-credits.txt', data: 'Thank you @wibobm!\\n'}],\n            webxml_welcome: 'index.html',\n            webxml_display_name: 'Web Magic',\n            webxml_mime_mapping: [\n                { extension: 'woff', mime_type: 'application/font-woff' }\n              ]\n          },\n          files: [\n            {\n              expand: true,\n              src: ['<%= build_dir %>/**']\n            }\n          ]\n        }\n      }\n});\n```\n\n### Options\n\n#### options.war_dist_folder\nType: `'string'`\nDefault value: `'test'`\n\nThis is the folder that the war will be placed. This folder has to exist before this task is run.\n\n#### options.war_name\nType: `'string'`\nDefault value: `'grunt'`\n\n#### options.war_extras\nType: `'Array'`\nDefault value: `[]`\n\nA list of files and folders entries that are to be included in the war. Each object in the array has\nkeys `filename` and `data` example: `{ filename: 'name_of_file.ext', data: file_data }`.  If the key `data`\nis omitted then an empty folder called `filename` will be added to the WAR. The value of key  `data` can\neither be a `string` or a function that returns a `string`.\n\n#### options.war_verbose\nType: `'boolean'`\nDefault value: `false`\n\nLogs progress to the grunt console log.\n\n#### options.war_compression\nType: `'string'`\nDefault value: `'DEFLATE'`\n\nCompress ('DEFLATE') or leave uncompressed ('NONE').\n\n#### options.webxml_welcome\nType: `'string'`\nDefault value: `'index.html'`\n\n#### options.webxml_display_name\nType: `'string'`\nDefault value: `'Grunt WAR'`\n\n#### options.webxml_mime_mapping\nType: `'Array'`\nDefault value: `[]`\n\nAn array of objects with properties `extension` and `mime_type`.\n\n#### options.webxml_webapp_extras\nType: `'Array'`\nDefault value: `[]`\n\nAn array of objects that are either `'string'` or `'function'` that return `'string'`.  These entries are\nincluded directly into the generated web.xml.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n#### 0.2.7\n* Fixed the inclusion of source files defined in previous WAR task configurations for all future WAR tasks. Example: a war.foo task includes dist/foo in foo.war, and a war.bar task includes dist/bar in bar.war. bar.war would include both dist/bar and the previously added dist/foo. (jbenner)\n\n#### 0.2.6\n\n* Fixed grunt-war encoding text incorrectly. Example: 'Količina' and 'Osveži' would get encoded as 'KoliÄina' and 'OsveÅ¾i'. (sobrle)\n\n#### 0.2.5\n\n* Updated peerDependencies to include node-zip. (@augier)\n\n#### 0.2.4\n\n* Now deletes `options.war_name` from `options.war_dist_folder` before trying to generate a new `war` file.\n\n#### 0.2.3\n\n* Fixed file names being trimmed when included in war. (@augier)\n\n#### 0.2.1\n\n* Fixed deployment issue resulting from using wrong option when generating webapp tag.\n\n#### 0.2.0\n\n* Renamed `options.war_filename` to `options.war_name`.\n* Added `options.war_extras`\n* Added `options.webxml_webapp_extras`.\n\n#### 0.1.4 Initial\n",
  "readmeFilename": "README.md",
  "_id": "grunt-war@0.2.7",
  "_from": "grunt-war@^0.2.7"
}
